# If this flag is set to Y then user is supposed to download the Wane files (*wane.gz) manually
# Manually downloaded wane files should be kept in the specified directory as mentioned in the next property tempWaneGZFileDownloadDir
manuallyDownloadWaneFlag=

# location/directory where the archived (*wane.gz) wane files will be downloaded in local system -  path ends with slash
# provide complete path and make sure the directory exists. Program won't be creating the directory on its own if directory is not present
# Based on the operating system slash (forward or backward) may vary
tempWaneGZFileDownloadDir=C:/Users/ASUS1/Desktop/InternetArcFiles/wane/

# This flag determines whether to delete the *wane.gz files after processing/unzipping in local directory
# Y = delete files, N = retain the files in the local (above - tempWaneGZFileDownloadDir) directory
deletewaneGZfiles=N

# location where the wane files will be extracted for further processing/reading 
# (files will be converted from wane.gz to .wane extension and stored in this temp location.
# Make sure the directory is already present, process won't be creating the directory by itself
tempWaneFileExtractDir=C:/Users/ASUS1/Desktop/InternetArcFiles/extract/

# Flag to determine whether to keep or delete the wane files after they are processed and converted to java objects (Json data)
# Y = delete files, N = retain the files in the temp (above - tempWaneFileExtractDir) directory
deletewanefiles=N

# this is generated output file. Please keep complete name till the desired file extension (.csv always).
# Base directory must be present
outputCSVFile=C:/Users/ASUS1/Desktop/InternetArcFiles/NMRP_Output.csv

# place the complete path for the Excel file which is listing all communities. (Journalism Sources for 100 Communities_FINAL LIST_Final Edits.xlsx)
# Or keep the file in the project Classpath so that process can find it automatically.
## Assumption : First sheet in the work sheet will have the necessary information.
communityExcelFile=Journalism Sources for 100 Communities_FINAL LIST_Final Edits.xlsx

## This file contains logical mapping of the location data. Provide complete path for this file
cityMappingFile=./config/cityMapping.properties

## location string literals which should not be considered while generating the location statistics
# Always add the entry in Upper Case
excludeInvalidLocationStr=.ORG,.COM

# this property determines the lower limit for the location Frequency in the output.
# if the value is 1 then all the location found will appear in the final output, 
# if for example 5 then all the locations appeared less than 5 times will be discarded in the generated output.
locationFrequencyCutPoint=5

# Below properties are related to WASAPI - also used for NM project to download Wane files
# if the property manuallyDownloadWaneFlag is set to Y then process will not use the below properties.
# WASAPI URL endpoint - end with slash
# baseurl=https://partner.archive-it.org/wasapi/v1/jobs/{jobToken}/result/
# jobToken=24
#baseurl=https://partner.archive-it.org/wasapi/v1/jobs/24/result

baseurl=https://partner.archive-it.org/wasapi/v1/jobs/24/result?page=32

# WASAPI authentication URL
authurl=https://partner.archive-it.org/login/

## Dual authentication required for Wane files to download from server.
waneAuthurl=https://warcs.archive-it.org/login/

# how many times to retry a download for each file from HTTP connection (retries + 1 = total tries)
retries=2

# Username for the WASAPI account we're connecting with
username=matthew.weber

# Password for our account 	
password=webarchive1

# WASAPI server account ID
accountId=1140

# Checksum algorithm - allowed values are md5 and sha1
checksumAlgorithm=md5

## This is optional property
# Restricts the wane files with the crawl id
crawlIdLowerBound=

## While downloading wane file URL is getting redirected to https://warcs.archive-it.org
# This require another login attempt
warcBaseurl=https://warcs.archive-it.org/login/